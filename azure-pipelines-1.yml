# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dockerRegistryServiceConnection: 'jynsimcorpdockerregistry'
  acrRegistryServiceConnection: 'jynappacr01'
  imageRepository: 'RomanConverterWebApi'
  containerRegistry: 'jynappacr01.azurecr.io'
  dockerfilePath: 'RomanConverterWebApi/Dockerfile'
  tag: '$(Build.BuildId)'
  deploymentFile: 'deployment.yaml'
  imagePullSecret: '${containerRegistry}secret'

jobs:
  - job: build
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(acrRegistryServiceConnection)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(containerRegistry)/$(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/RomanConverterWebApi
        tags: |
          $(tag)
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: createSecret
        secretName: $(imagePullSecret)
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
        kubernetesServiceConnection: 'yuanjingdkkuberbate'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'yuanjingdkkuberbate'
        namespace: 'azure-vote'
        manifests: '$(Pipeline.Workspace)/RomanConverterWebApi/$(deploymentFile)'
        imagePullSecrets: |
                $(imagePullSecret)
        containers: |
                $(containerRegistry)/$(imageRepository):$(tag)